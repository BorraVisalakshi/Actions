# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploying to Weblogic Local

on:
  workflow_dispatch:
    inputs:
    
      scan:
       description: 'Send for scan'
       required: true
       default: ''
      cr:
       description: 'Enter CR Status'
       required: true
       default: ''
  
jobs:
  build:
    name: Deploying to Local Weblogic Server
    runs-on: self-hosted
    
    outputs:
      value: ${{ steps.cr_status.outputs.GREET }}

    steps:
    #Checking out the code
    - name: Step-1 Checkout the code
      uses: actions/checkout@v2
      
   
    
  #Build with Maven Goals
    - name: Step-2 Build with Maven
      run: mvn clean install
      
  # Upload to artifactory
   # - name: Step-3 Upload to Artifactory
   #   run:  Remove-item alias:curl;
     #       curl -X PUT -u ${{ secrets.USERNAME_ARTIFACTORY }}:${{ secrets.PASSWORD_ARTIFACTORY }} -T C:\Users\s316735\GitHub_Actions\SelfHosted_runner\_work\MultiJobs_Pipeline\MultiJobs_Pipeline\target\HelloWorld.war "http://localhost:8082/artifactory/CG_AEP-libs-release-local/HelloWorld.war"

  #Zip the code
    - name: Step-4 Zip the Source code
      uses: papeloto/action-zip@v1
      with:
          dest: WebApp.zip
          
  #Verify the Zip folder
    - name: Step-5 Verify Directory
      run: dir
      
    - name: Check user input
      run: echo "::set-output name=scan::${{ github.event.inputs.scan}}"
      id: input_is
    
    - name: get Output
      run: Write-Output "${{ steps.input_is.outputs.scan }}"
    
  #Move the Zip to D: drive
    - name: Step-6 Move Directory to D drive
      run: move-Item "WebApp.zip" "${{ secrets.PATH }}"  -Force
      if: ${{ github.event.inputs.scan == 'yes' }}
   
    - name: Check output
      run: echo "output is ${{ steps.cr_status.outputs.GREET }}"
    
    - name : Run powershell
      id: shell
      run: |
           ./welcome.ps1
     #Write-Output "::set-output name=GREET::$result"
     #echo "::set-output name=ans::$(echo $result)"
           
    
    - name: Set output value
      run: |
            Write-Output "::set-output name=GREET::$(./welcome.ps1)"
      #Write-Output "::set-output = $($result)"
     # Write-Output "::set-output name=GREET::$result"
      #echo "::set-output name=url::https://google.com"
      id: cr_status
      
      
    - name: Step-10 Check Servicenow CR Number Status
      if: ${{ steps.cr_status.outputs.GREET == 'Hello Vishali'}}
      run: |
            .\CRNum.ps1 -username ${{ secrets.SERVICENOW_USER }} -password ${{ secrets.SERVICENOW_PASSWORD }} -crnumber ${{ github.event.inputs.cr}}    
      
   
